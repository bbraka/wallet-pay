/* tslint:disable */
/* eslint-disable */
/**
 * User Wallet API
 * API for User Wallet application with order and transaction management
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface LoginResponse
 */
export interface LoginResponse {
    /**
     * 
     * @type {boolean}
     * @memberof LoginResponse
     */
    success?: boolean;
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    message?: string;
    /**
     * 
     * @type {User}
     * @memberof LoginResponse
     */
    user?: User;
    /**
     * Bearer token for API authentication
     * @type {string}
     * @memberof LoginResponse
     */
    token?: string;
}

/**
 * Check if a given object implements the LoginResponse interface.
 */
export function instanceOfLoginResponse(value: object): value is LoginResponse {
    return true;
}

export function LoginResponseFromJSON(json: any): LoginResponse {
    return LoginResponseFromJSONTyped(json, false);
}

export function LoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'] == null ? undefined : json['success'],
        'message': json['message'] == null ? undefined : json['message'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
        'token': json['token'] == null ? undefined : json['token'],
    };
}

export function LoginResponseToJSON(json: any): LoginResponse {
    return LoginResponseToJSONTyped(json, false);
}

export function LoginResponseToJSONTyped(value?: LoginResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'message': value['message'],
        'user': UserToJSON(value['user']),
        'token': value['token'],
    };
}

