/* tslint:disable */
/* eslint-disable */
/**
 * User Wallet API
 * API for User Wallet application with order and transaction management
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateMerchantOrderRequest
 */
export interface CreateMerchantOrderRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateMerchantOrderRequest
     */
    title: string;
    /**
     * 
     * @type {number}
     * @memberof CreateMerchantOrderRequest
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof CreateMerchantOrderRequest
     */
    description?: string;
    /**
     * Required for transfers
     * @type {number}
     * @memberof CreateMerchantOrderRequest
     */
    receiverUserId?: number;
    /**
     * Required for top-ups
     * @type {number}
     * @memberof CreateMerchantOrderRequest
     */
    topUpProviderId?: number;
    /**
     * 
     * @type {string}
     * @memberof CreateMerchantOrderRequest
     */
    providerReference?: string;
}

/**
 * Check if a given object implements the CreateMerchantOrderRequest interface.
 */
export function instanceOfCreateMerchantOrderRequest(value: object): value is CreateMerchantOrderRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    return true;
}

export function CreateMerchantOrderRequestFromJSON(json: any): CreateMerchantOrderRequest {
    return CreateMerchantOrderRequestFromJSONTyped(json, false);
}

export function CreateMerchantOrderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMerchantOrderRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'amount': json['amount'],
        'description': json['description'] == null ? undefined : json['description'],
        'receiverUserId': json['receiver_user_id'] == null ? undefined : json['receiver_user_id'],
        'topUpProviderId': json['top_up_provider_id'] == null ? undefined : json['top_up_provider_id'],
        'providerReference': json['provider_reference'] == null ? undefined : json['provider_reference'],
    };
}

export function CreateMerchantOrderRequestToJSON(json: any): CreateMerchantOrderRequest {
    return CreateMerchantOrderRequestToJSONTyped(json, false);
}

export function CreateMerchantOrderRequestToJSONTyped(value?: CreateMerchantOrderRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'amount': value['amount'],
        'description': value['description'],
        'receiver_user_id': value['receiverUserId'],
        'top_up_provider_id': value['topUpProviderId'],
        'provider_reference': value['providerReference'],
    };
}

