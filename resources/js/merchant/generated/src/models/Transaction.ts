/* tslint:disable */
/* eslint-disable */
/**
 * User Wallet API
 * API for User Wallet application with order and transaction management
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Transaction
 */
export interface Transaction {
    /**
     * Transaction ID
     * @type {number}
     * @memberof Transaction
     */
    id?: number;
    /**
     * ID of the user this transaction belongs to
     * @type {number}
     * @memberof Transaction
     */
    userId: number;
    /**
     * Transaction type
     * @type {string}
     * @memberof Transaction
     */
    type: TransactionTypeEnum;
    /**
     * Transaction amount
     * @type {number}
     * @memberof Transaction
     */
    amount: number;
    /**
     * Transaction status
     * @type {string}
     * @memberof Transaction
     */
    status: TransactionStatusEnum;
    /**
     * Transaction description
     * @type {string}
     * @memberof Transaction
     */
    description?: string | null;
    /**
     * ID of the user who created this transaction
     * @type {number}
     * @memberof Transaction
     */
    createdBy: number;
    /**
     * ID of the related order
     * @type {number}
     * @memberof Transaction
     */
    orderId?: number | null;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof Transaction
     */
    createdAt?: Date;
    /**
     * Last update timestamp
     * @type {Date}
     * @memberof Transaction
     */
    updatedAt?: Date | null;
}


/**
 * @export
 */
export const TransactionTypeEnum = {
    Credit: 'credit',
    Debit: 'debit'
} as const;
export type TransactionTypeEnum = typeof TransactionTypeEnum[keyof typeof TransactionTypeEnum];

/**
 * @export
 */
export const TransactionStatusEnum = {
    Active: 'active',
    Cancelled: 'cancelled'
} as const;
export type TransactionStatusEnum = typeof TransactionStatusEnum[keyof typeof TransactionStatusEnum];


/**
 * Check if a given object implements the Transaction interface.
 */
export function instanceOfTransaction(value: object): value is Transaction {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    return true;
}

export function TransactionFromJSON(json: any): Transaction {
    return TransactionFromJSONTyped(json, false);
}

export function TransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'userId': json['user_id'],
        'type': json['type'],
        'amount': json['amount'],
        'status': json['status'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdBy': json['created_by'],
        'orderId': json['order_id'] == null ? undefined : json['order_id'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function TransactionToJSON(json: any): Transaction {
    return TransactionToJSONTyped(json, false);
}

export function TransactionToJSONTyped(value?: Transaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user_id': value['userId'],
        'type': value['type'],
        'amount': value['amount'],
        'status': value['status'],
        'description': value['description'],
        'created_by': value['createdBy'],
        'order_id': value['orderId'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] === null ? null : ((value['updatedAt'] as any)?.toISOString()),
    };
}

