/* tslint:disable */
/* eslint-disable */
/**
 * User Wallet API
 * API for User Wallet application with order and transaction management
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * User ID
     * @type {number}
     * @memberof User
     */
    id?: number;
    /**
     * User's full name
     * @type {string}
     * @memberof User
     */
    name: string;
    /**
     * User's email address
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * User's wallet balance
     * @type {number}
     * @memberof User
     */
    walletAmount: number;
    /**
     * Email verification timestamp
     * @type {Date}
     * @memberof User
     */
    emailVerifiedAt?: Date | null;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof User
     */
    createdAt?: Date;
    /**
     * Last update timestamp
     * @type {Date}
     * @memberof User
     */
    updatedAt?: Date | null;
    /**
     * Soft delete timestamp
     * @type {Date}
     * @memberof User
     */
    deletedAt?: Date | null;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('walletAmount' in value) || value['walletAmount'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'email': json['email'],
        'walletAmount': json['wallet_amount'],
        'emailVerifiedAt': json['email_verified_at'] == null ? undefined : (new Date(json['email_verified_at'])),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'deletedAt': json['deleted_at'] == null ? undefined : (new Date(json['deleted_at'])),
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'email': value['email'],
        'wallet_amount': value['walletAmount'],
        'email_verified_at': value['emailVerifiedAt'] === null ? null : ((value['emailVerifiedAt'] as any)?.toISOString()),
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] === null ? null : ((value['updatedAt'] as any)?.toISOString()),
        'deleted_at': value['deletedAt'] === null ? null : ((value['deletedAt'] as any)?.toISOString()),
    };
}

