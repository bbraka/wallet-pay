/* tslint:disable */
/* eslint-disable */
/**
 * User Wallet API
 * API for User Wallet application with order and transaction management
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TopUpProvider
 */
export interface TopUpProvider {
    /**
     * Provider ID
     * @type {number}
     * @memberof TopUpProvider
     */
    id?: number;
    /**
     * Provider name
     * @type {string}
     * @memberof TopUpProvider
     */
    name: string;
    /**
     * Provider code
     * @type {string}
     * @memberof TopUpProvider
     */
    code: string;
    /**
     * Provider description
     * @type {string}
     * @memberof TopUpProvider
     */
    description?: string | null;
    /**
     * Whether the provider is active
     * @type {boolean}
     * @memberof TopUpProvider
     */
    isActive: boolean;
    /**
     * Whether this provider requires a reference
     * @type {boolean}
     * @memberof TopUpProvider
     */
    requiresReference: boolean;
}

/**
 * Check if a given object implements the TopUpProvider interface.
 */
export function instanceOfTopUpProvider(value: object): value is TopUpProvider {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    if (!('requiresReference' in value) || value['requiresReference'] === undefined) return false;
    return true;
}

export function TopUpProviderFromJSON(json: any): TopUpProvider {
    return TopUpProviderFromJSONTyped(json, false);
}

export function TopUpProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopUpProvider {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'code': json['code'],
        'description': json['description'] == null ? undefined : json['description'],
        'isActive': json['is_active'],
        'requiresReference': json['requires_reference'],
    };
}

export function TopUpProviderToJSON(json: any): TopUpProvider {
    return TopUpProviderToJSONTyped(json, false);
}

export function TopUpProviderToJSONTyped(value?: TopUpProvider | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'code': value['code'],
        'description': value['description'],
        'is_active': value['isActive'],
        'requires_reference': value['requiresReference'],
    };
}

